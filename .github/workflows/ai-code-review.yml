name: ChatGPT PR Code Review

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  chatgpt-review:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository with full history
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Get PR diff against main
      - name: Get PR Diff
        run: |
          git fetch origin main
          git diff origin/main...HEAD > pr.diff
          echo "‚úÖ PR diff generated successfully."

      # 3. Send diff to ChatGPT API
      - name: Send Diff to ChatGPT
        id: chatgpt
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          if [ ! -s pr.diff ]; then
            echo "response<<EOF" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è No changes detected in the PR diff." >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Limit the diff size to avoid API token overflow
          DIFF=$(head -c 12000 pr.diff)
          
          echo "üöÄ Sending PR diff to ChatGPT..."
          RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
                  "model": "gpt-4o-mini",
                  "messages": [
                    {"role": "system", "content": "You are a senior software engineer. Provide a structured, concise, and actionable code review."},
                    {"role": "user", "content": "Review the following Git diff and suggest improvements. Be clear and provide examples where possible:\n\n'"$DIFF"'"}
                  ]
                }' | jq -r '.choices[0].message.content // "‚ö†Ô∏è ChatGPT API did not return a valid response."')

          # Save response to output
          echo "response<<EOF" >> $GITHUB_OUTPUT
          echo "$RESPONSE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "‚úÖ ChatGPT review fetched successfully."

      # 4. Post ChatGPT‚Äôs review as a sticky PR comment
      - name: Post ChatGPT Review as PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.PAT_Token }}
          header: ai-code-review
          message: |
            ü§ñ **ChatGPT Code Review**  
            ---
            ${{ steps.chatgpt.outputs.response }}
