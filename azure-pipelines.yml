trigger:
  branches:
    include:
      - main   # adjust if using another branch

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
# Step 1: Use .NET SDK
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.0.x'   # change to your .NET version

# Step 2: Restore NuGet Packages
- task: NuGetCommand@2
  inputs:
    restoreSolution: 'APIDemo/StudentGen_AI.sln'

# Step 3: Build Solution
- task: VSBuild@1
  inputs:
    solution: 'APIDemo/StudentGen_AI.sln'
    configuration: '$(buildConfiguration)'

# Step 4: Publish Web Project
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: 'APIDemo/StudentGen_AI.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

# Step 5: Publish Build Artifacts
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

# Step 6: Deploy to Azure Web App
- task: AzureWebApp@1
  inputs:
    azureSubscription: '6c318e60-5d41-47fe-995f-6adebe404d4d'
    appType: 'webApp'
    appName: 'genAI-api-glb-in'
    package: '$(Build.ArtifactStagingDirectory)/**/*.zip'
